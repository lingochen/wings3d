.overlay {
  position:fixed;
  top:0;
  left:0;

  padding: 0;
  margin: 0;

  width: 100%;
  height: 100%;
  background:rgba(255,255,255,0.5);
}

.dialog {
  background-color:  #fff;
  border: solid 1px #dfdfdf;
  box-shadow: 1px 1px 2px #cfcfcf;
  width: 340px;
}

.dialog input[type=number] {
   width: 60px;
}

.dialog span {
    display: inline-block;
}

/* all form dialog start in hiding */
form {
  display: none;
  flex-direction: column;
  position: absolute;
}

#cutLineDialog {
  background-color:  #fff;
  border: solid 1px #dfdfdf;
  box-shadow: 1px 1px 2px #cfcfcf;
  width: 240px;
}

/* pref tabs */
.centerModal {
  display: flex;
/*  align-items: center; */
  justify-content: center;
}

/* change to using gride */
.tabs>.tabButton{
    display: block;
    margin-top: 1px;
    background: #5a5243;
    color: #f5f5f5;
    text-align: center;
}
.tabs>input{
    display: none;
}
.tabs>input:checked+label+.tabPanel{
    display: block;
}
.tabs>.tabPanel{
    background: #fff;
    display: none;
}
@media screen and (min-width: 768px){
  form#preferenceForm {
     width: 50rem;
     height: 50rem;
     /*margin-top: 5rem;*/
  }
  .tabs{
    display: grid;
    grid-template-columns: repeat(4, 1fr);
    grid-template-areas: "pref0 pref1 pref2 pref3"
                         "panel panel panel panel"
  }
  .tabs>.tabButton{
    cursor:pointer;
  }
  .tabs>input:checked+label{
    background:#fff;
    color:#5a5243
  }
  .tabs>input:checked+label+.tabPanel{
    grid-area: panel;
    display: flex;
    flex-wrap: wrap;
    padding: 1rem;
  }
  label[for$="generalPref"] {
    grid-area: pref0;
  }
  label[for$="cameraPref"] {
    grid-area: pref1;
  }
  label[for$="interfacePref"] {
    grid-area: pref2;
  }
  label[for$="advancedMiscPref"] {
    grid-area: pref3;
  }
}

form fieldset input[type="number"] {
  width: 5rem;
}

form .fieldPref {
  display: grid;
  grid-template-columns: max-content max-content;
  grid-gap:5px;
  margin: 0.5rem;
}
.fieldPref label.right { 
  text-align:right; 
}
form .verticalPref {
  display: flex;
  flex-direction: column;
  padding: 0.5rem;
}
form .horizontalPref {
  display: flex;
  flex-direction: row;
  padding: 0.5rem;
  flex-wrap: nowrap;
}
input[name$="Conditional"]:not(:checked) ~ fieldset input[name$="Conditional"],
input[name$="Conditional"]:not(:checked) ~ label input[name$="Conditional"] {
  visibility: hidden;
}
input[name$="Conditional"]:not(:checked)+label+label,
input[name$="Conditional"]:not(:checked) ~ fieldset[name$="Conditional"] {
  pointer-events: none;
  opacity: 0.5;
}
label.setValue {
  display: flex;
  justify-content: space-between;
}
.verticalPref hr {  /* force hr back to horizontal line again */
  margin-left: 0;
  margin-right: 0;
}
form label:not(.setValue):after { /* force line break after label */
  content: "\A";
  white-space: pre;
}
